From 49b97b05bd98936aa034f1c3f66376d40ffd6991 Mon Sep 17 00:00:00 2001
From: danushree05 <danushree062005@gmail.com>
Date: Wed, 10 Jul 2024 23:30:43 +0530
Subject: [PATCH 1/4] update componentDidMount

---
 src/Graph.tsx | 29 +++++++++++++++++++----------
 1 file changed, 19 insertions(+), 10 deletions(-)

diff --git a/src/Graph.tsx b/src/Graph.tsx
index 277797d..af0a31f 100644
--- a/src/Graph.tsx
+++ b/src/Graph.tsx
@@ -23,10 +23,13 @@ class Graph extends Component<IProps, {}> {
     const elem = document.getElementsByTagName('perspective-viewer')[0] as unknown as PerspectiveViewerElement;
 
     const schema = {
-      stock: 'string',
-      top_ask_price: 'float',
-      top_bid_price: 'float',
-      timestamp: 'date',
+      price_abc: 'float',
+      price_def: 'float',
+      ratio:'float',
+      timestamp:'date',
+      upper_bound:'float',
+      lower_bound:'float',
+      trigger_alert:'float',
     };
 
     if (window.perspective && window.perspective.worker()) {
@@ -39,12 +42,18 @@ class Graph extends Component<IProps, {}> {
       elem.setAttribute('column-pivots', '["stock"]');
       elem.setAttribute('row-pivots', '["timestamp"]');
       elem.setAttribute('columns', '["top_ask_price"]');
-      elem.setAttribute('aggregates', JSON.stringify({
-        stock: 'distinctcount',
-        top_ask_price: 'avg',
-        top_bid_price: 'avg',
-        timestamp: 'distinct count',
-      }));
+      elem.setAttribute(
+        "aggregates",
+        JSON.stringify({
+          price_abc: 'avg',
+          price_def: 'avg',
+          ratio: 'avg',
+          timestamp: 'distinct count',
+          upper_bound: 'avg',
+          lower_bound: 'avg',
+          trigger_alert: 'avg',
+        })
+      );
     }
   }
 
-- 
2.39.1.windows.1


From f329a6c7c06d2a7751e0f621098aa4c57ca55da9 Mon Sep 17 00:00:00 2001
From: danushree05 <danushree062005@gmail.com>
Date: Wed, 10 Jul 2024 23:32:27 +0530
Subject: [PATCH 2/4] update componentDidUpdate

---
 src/Graph.tsx | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

diff --git a/src/Graph.tsx b/src/Graph.tsx
index af0a31f..fef5b78 100644
--- a/src/Graph.tsx
+++ b/src/Graph.tsx
@@ -1,5 +1,5 @@
 import React, { Component } from 'react';
-import { Table } from '@finos/perspective';
+import { Table, TableData } from '@finos/perspective';
 import { ServerRespond } from './DataStreamer';
 import { DataManipulator } from './DataManipulator';
 import './Graph.css';
@@ -59,9 +59,9 @@ class Graph extends Component<IProps, {}> {
 
   componentDidUpdate() {
     if (this.table) {
-      this.table.update(
-        DataManipulator.generateRow(this.props.data),
-      );
+      this.table.update([
+       DataManipulator.generateRow(this.props.data),
+      ] as unknown as TableData);
     }
   }
 }
-- 
2.39.1.windows.1


From 9c623b6edb1608e575f5497b5dd41276722d3053 Mon Sep 17 00:00:00 2001
From: danushree05 <danushree062005@gmail.com>
Date: Wed, 10 Jul 2024 23:34:35 +0530
Subject: [PATCH 3/4] update Row

---
 src/DataManipulator.ts | 10 +++++++---
 1 file changed, 7 insertions(+), 3 deletions(-)

diff --git a/src/DataManipulator.ts b/src/DataManipulator.ts
index 7f62295..7cf8a58 100644
--- a/src/DataManipulator.ts
+++ b/src/DataManipulator.ts
@@ -1,9 +1,13 @@
 import { ServerRespond } from './DataStreamer';
 
 export interface Row {
-  stock: string,
-  top_ask_price: number,
-  timestamp: Date,
+  price_abc: number;
+  price_def: number;
+  ratio: number;
+  timestamp: Date;
+  upper_bound: number;
+  lower_bound: number;
+  trigger_alert: number | undefined,
 }
 
 
-- 
2.39.1.windows.1


From 9c4f8130e0007ba12fdf9240a3215d7c34d55426 Mon Sep 17 00:00:00 2001
From: danushree05 <danushree062005@gmail.com>
Date: Wed, 10 Jul 2024 23:36:35 +0530
Subject: [PATCH 4/4] update DataManipulator

---
 src/DataManipulator.ts | 28 ++++++++++++++++++++--------
 1 file changed, 20 insertions(+), 8 deletions(-)

diff --git a/src/DataManipulator.ts b/src/DataManipulator.ts
index 7cf8a58..0b4d820 100644
--- a/src/DataManipulator.ts
+++ b/src/DataManipulator.ts
@@ -12,13 +12,25 @@ export interface Row {
 
 
 export class DataManipulator {
-  static generateRow(serverResponds: ServerRespond[]) {
-    return serverResponds.map((el: any) => {
-      return {
-        stock: el.stock,
-        top_ask_price: el.top_ask && el.top_ask.price || 0,
-        timestamp: el.timestamp,
-      };
-    })
+  static generateRow(serverRespond: ServerRespond[]) {
+    const priceABC =(serverRespond[0].top_ask.price + serverRespond[0].top_bid.price) / 2;
+    const priceDEF =(serverRespond[1].top_ask.price + serverRespond[1].top_bid.price) / 2;
+    const ratio = priceABC / priceDEF;
+    const upperBound = 1 + 0.05;
+    const lowerBound = 1 - 0.05;
+
+       return {
+      price_abc: priceABC,
+      price_def: priceDEF,
+      ratio,
+      timestamp: serverRespond[0].timestamp > serverRespond[1].timestamp
+        ? serverRespond[0].timestamp
+        : serverRespond[1].timestamp,
+      upper_bound: upperBound,
+      lower_bound: lowerBound,
+      trigger_alert: (ratio > upperBound || ratio < lowerBound) ? ratio : undefined,
+};
+
+    
   }
 }
-- 
2.39.1.windows.1

